░ - 176:        10110000
ÿ - 152:        10011000
l - 108:        01101100
F - 70:         01000110
½ - 171:        10101011
┘ - 217:        11011001
n - 110:        01101110
last_add >> p - 112:    00111000 0

// n    dec     8bin        7bin
// 0 =  048     00110000    0110000
// 1 =	049     00110001    0110001
// 2 =	050     00110010    0110010
// 3 =	051     00110011    0110011
// 4 =	052     00110100    0110100
// 5 =	053     00110101    0110101
// 6 =	054     00110110    0110110
// 7 =	055     00110111    0110111
// 8 =	056     00111000    0111000

saida        > 10110000 10011000 01101100 01000110 10101011 11011001 01101110 00111000 0
      
numero       > 0        1        2        3        4        5        6        7        8
n_8bit       > 00110000 00110001 00110010 00110011 00110100 00110101 00110110 00110111 00111000
n_7bit       >  0110000  0110001  0110010  0110011  0110100  0110101  0110110  0110111  0111000
    
REAL>    
bitand       > 01234567 01234567 01234567 01234567 01234567 01234567 01234567 01234567 01234567
numero       > 0        1        2        3        4        5        6        7        8
n_7bit       >  0110000  0110001  0110010  0110011  0110100  0110101  0110110  0110111  0111000
    
v3           >  0110000  0110001  0110010  0110011  0110100  0110101  0110110  0110111  0111000 << TA CERTO!!!!
esperadov3   >  01100000 11000101 10010011 00110110 10001101 01011011 00110111 0111000 ??o que faz com esse cara? nada, aqui é bin e não bytes
como_ler     >  01100000 11000101 10010011 00110110 10001101 01011011 00110111 00111000 add 0 pra manter o valor certo

recebidov3   >  01100000 11000101 10010011 00110110 10001101 01011011 00110111 01110000 << QUASE BOA MALUCOO, cago o ultimo!
recebidov3.1 >  01100000 11000101 10010011 00110110 10001101 01011011 00110111 00111000 << BOA KRAI TA TOP

` - 96:         01100000
┼ - 197:        11000101
ô - 147:        10010011
6 - 54:         00110110
ì - 141:        10001101
[ - 91:         01011011
7 - 55:         00110111
LAST: 8 - 56:   00111000